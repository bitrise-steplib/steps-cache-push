format_version: 6
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  # define these in your .bitrise.secrets.yml
  - BITRISE_CACHE_API_URL: $BITRISE_CACHE_API_URL
  - BITRISE_CACHE_INFO_PATH: $BITRISE_CACHE_INFO_PATH

workflows:
  test:
    before_run:
    - audit-this-step
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        title: Download assets
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf ./_sample_artifacts
            git clone https://github.com/bitrise-samples/sample-artifacts.git ./_sample_artifacts
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ./_workdir
        - is_create_path: true
    - path::./:
        title: Step Test
        run_if: true
        is_skippable: false
        inputs:
        - is_debug_mode: true
        - cache_paths: |
            $BITRISE_CACHE_DIR
            ../_sample_artifacts/filestructure -> ../_sample_artifacts/filestructure/build/findme.test
            ./DoesNotExist/
            ./DoesNotExist
            ~/DoesNotExist
            /Does/not/exists
            ~/.android -> ~/.lockfile
            ../_sample_artifacts/ipas
            ../_sample_artifacts/ipas/
            ../_sample_artifacts/filestructure/build/test.bin
        - ignore_check_on_paths: |-
            ../_sample_artifacts/filestructure/sub-dir
            ~/DoesNotExists/This
            !~/.android/dir
            *.apk
    - script:
        title: Create another samples
        is_always_run: true
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            rm -rf /tmp/cache-archive.tar
            rm -rf /tmp/cache-info.json
            rm -rf ./another_samples
            mkdir ./another_samples

            #should follow changes
            echo "content" > ./another_samples/test_file1.txt

            #should not exists
            echo "content" > ./another_samples/test_exclude_ext.mp3

            #should exists but ignore changes
            echo "content" > ./another_samples/test_ignorechanges.txt
    - path::./:
        title: Step Test
        is_always_run: true
        run_if: true
        is_skippable: false
        inputs:
        - compress_archive: true
        - is_debug_mode: true
        - cache_paths: |
            ./another_samples
        - ignore_check_on_paths: |-
            ./another_samples/test_ignorechanges.txt
            !*.mp3
    - script:
        title: Store MD5 hash and check if file doesn't exists
        is_always_run: true
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            
            rm -rf ./another_samples
            tar -xPf /tmp/cache-archive.tar

            envman add --key MD5PREVIOUSLY --value $(md5 -q ./another_samples/test_ignorechanges.txt)
            echo "content" >> ./another_samples/test_ignorechanges.txt

            #should not exists
            if [ -f ./another_samples/test_exclude_ext.mp3 ]; then
              echo "File exists."
              exit 1
            fi
    - path::./:
        title: Step Test
        is_always_run: true
        run_if: true
        is_skippable: false
        inputs:
        - compress_archive: true
        - is_debug_mode: true
        - cache_paths: |
            ./another_samples
        - ignore_check_on_paths: |-
            ./another_samples/test_ignorechanges.txt
            !*.mp3
    - script:
        title: Check if MD5 matches the previous one
        is_always_run: true
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            
            rm -rf ./another_samples
            tar -xPf /tmp/cache-archive.tar

            export MD5CURRENT=$(md5 -q ./another_samples/test_ignorechanges.txt)
            if [ "$MD5CURRENT" != "$MD5PREVIOUSLY" ]; then
              echo "MD5 changed."
              exit 1
            fi

            #should not exists
            if [ -f ./another_samples/test_exclude_ext.mp3 ]; then
              echo "File exists."
              exit 1
            fi

  # ----------------------------------------------------------------
  # --- Utility workflows
  dep-update:
    title: Dep update
    description: |
      Used for updating bitrise dependencies with dep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -v
            dep ensure -v -update

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
